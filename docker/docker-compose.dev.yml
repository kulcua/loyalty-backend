version: "2"

services:
  php:
    container_name: open_loyalty_backend
    build:
      context: '../'
      dockerfile: './docker/dev/php/fpm-dockerfile'
    links:
      - db
      - elk
      - mail
    ports:
      - "9000:9000"
    volumes:
        - '../backend:/var/www/openloyalty'
    env_file:
        - .env
  nginx:
    container_name: open_loyalty_frontend
    build:
      context: '../'
      dockerfile: './docker/dev/web/backend-dockerfile'
    links:
      - php
    ports:
      - "80:80"
  frontend:
    container_name: open_loyalty_frontend_dev
    build:
      context: '../'
      dockerfile: './docker/dev/web/front-dockerfile'
    ports:
      - "8081:8081"
    volumes:
      - '../frontend/:/var/www/frontend'
      - './dev/web/config.js:/var/www/frontend/src/config.js'
  elk:
    container_name: open_loyalty_elk
    build:
      context: '../'
      dockerfile: './docker/base/elasticsearch-dockerfile'
    ports:
      - "9200:9200"
  db:
    container_name: open_loyalty_db
    image: postgres:9
    ports:
      - "5432:5432"
    env_file:
        - .env
  mail:
    container_name: open_loyalty_mail
    image: mailhog/mailhog
    ports:
      - "8186:8025"
  # mercure:
  #   image: dunglas/mercure
  #   command: caddy run -config /etc/caddy/Caddyfile.dev # Enable demo mode
  #   environment:
  #     - MERCURE_PUBLISHER_JWT_KEY=!ChangeMe! # You have to change MERCURE_JWT_TOKEN in api/.env when you change this. You can put the old value of MERCURE_JWT_TOKEN into the debugger on https://jwt.io/ and put the new value of JWT_KEY in the "secret" field to obtain the new encoded value for MERCURE_JWT_TOKEN
  #     - MERCURE_SUBSCRIBER_JWT_KEY=!ChangeMe! # You have to change MERCURE_JWT_TOKEN in api/.env when you change this. You can put the old value of MERCURE_JWT_TOKEN into the debugger on https://jwt.io/ and put the new value of JWT_KEY in the "secret" field to obtain the new encoded value for MERCURE_JWT_TOKEN
  #     - DEBUG=debug # Enable the debug mode. You should not enable it in production!
  #     - SERVER_NAME=:80 # Allow Mercure to run in HTTP, for PHP container to call it. Should not be set in production!
  #     - MERCURE_EXTRA_DIRECTIVES=cors_allowed_origins *\npublish_allowed_origins http://localhost:1337 https://localhost:1338
  #   ports:
  #     - "1337:80"